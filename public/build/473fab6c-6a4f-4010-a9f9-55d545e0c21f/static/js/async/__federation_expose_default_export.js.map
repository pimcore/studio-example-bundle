{"version":3,"file":"static/js/async/__federation_expose_default_export.js","sources":["/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/api-data/components/api-data-widget.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/api-data/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/api-data/modules/api-data-extension.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/asset-editor-toolbar-button/components/custom-toolbar-button.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/asset-editor-toolbar-button/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/asset-editor-toolbar-button/modules/asset-editor-toolbar-button-extension.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-icons/components/custom-icons.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-icons/icons/rocket.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-icons/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-icons/modules/custom-icon-extension.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-widgets/components/another-example-widget.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-widgets/components/example-widget.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-widgets/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/custom-widgets/modules/custom-widgets-extension.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/components/data-grid.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/components/dynamic-types-widget.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/dynamic-types/components/live-updating-cell-component.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/dynamic-types/definitions/live-updating-cell.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/dynamic-types/modules/dynamic-types-extension.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/main-nav-entry/components/example-tool.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/main-nav-entry/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/main-nav-entry/modules/main-nav-entry-extension.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/tab-manager/components/example-tab.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/tab-manager/components/preview-tab.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/tab-manager/index.ts","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/tab-manager/modules/asset-folder-tab-exentsion.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/examples/tab-manager/modules/object-preview-tab-extension.tsx","/var/www/html/dev/pimcore/studio-example-bundle/assets/js/src/plugins.ts"],"sourcesContent":["import { Content, Header } from '@pimcore/studio-ui-bundle/components'\nimport { useAssetGetTreeQuery } from '@pimcore/studio-ui-bundle/api/asset'\nimport React, { useEffect } from 'react'\nimport { ApiError, trackError } from '@pimcore/studio-ui-bundle/modules/app'\n\nexport const ApiDataWidget = (): React.JSX.Element => {\n  const { isLoading, data, isError, error } = useAssetGetTreeQuery({\n    page: 1,\n    pageSize: 10\n  })\n\n  useEffect(() => {\n    if (isError) {\n      trackError(new ApiError(error))\n    }\n  }, [isError])\n\n  return (\n    <Content\n      loading={ isLoading }\n      padded\n    >\n      <Header title=\"API data\" />\n\n      {data?.items.map((item) => (\n        <div key={ item.id }>\n          {item.filename}\n        </div>\n      ))}\n    </Content>\n  )\n}\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { ApiDataExtension } from './modules/api-data-extension'\n\nexport const ApiDataPlugin: IAbstractPlugin = {\n  name: 'ApiDataPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(ApiDataExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type MainNavRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport { type WidgetRegistry } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport { ApiDataWidget } from '../components/api-data-widget'\n\nexport const ApiDataExtension: AbstractModule = {\n  onInit () {\n    const mainNavRegistryService = container.get<MainNavRegistry>(serviceIds.mainNavRegistry)\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin/Api Data',\n      widgetConfig: {\n        name: 'Api Data',\n        id: 'api-data',\n        component: 'api-data-widget',\n        config: {\n          icon: {\n            type: 'name',\n            value: 'pimcore'\n          }\n        }\n      }\n    })\n\n    const widgetRegistryService = container.get<WidgetRegistry>(serviceIds.widgetManager)\n    widgetRegistryService.registerWidget({\n      name: 'api-data-widget',\n      component: ApiDataWidget\n    })\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, useAlertModal } from '@pimcore/studio-ui-bundle/components'\nimport { AssetContext, useAssetDraft } from '@pimcore/studio-ui-bundle/modules/asset'\n\nconst CustomToolbarButton: React.FC = () => {\n  const alertModal = useAlertModal()\n  const { id } = useContext(AssetContext)\n  const { asset } = useAssetDraft(id)\n\n  const onClick = (): void => {\n    alertModal.info({\n      title: 'Hello!',\n      content: 'Hello from the custom toolbar button! The button will only be shown for image assets. Have a nice day!'\n    })\n  }\n\n  return (\n    <>\n      { asset?.type === 'image' && (\n      <Button onClick={ onClick }>Custom Image Button</Button>\n      ) }\n    </>\n  )\n}\n\nexport default CustomToolbarButton\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { AssetEditorToolbarButtonExtension } from './modules/asset-editor-toolbar-button-extension'\n\nexport const AssetEditorToolbarButtonPlugin: IAbstractPlugin = {\n  name: 'AssetEditorToolbarButtonPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(AssetEditorToolbarButtonExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { componentConfig, type ComponentRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport CustomToolbarButton from '../components/custom-toolbar-button'\n\nexport const AssetEditorToolbarButtonExtension: AbstractModule = {\n  onInit: (): void => {\n    const componentRegistry = container.get<ComponentRegistry>(serviceIds['App/ComponentRegistry/ComponentRegistry'])\n\n    componentRegistry.registerToSlot(\n      componentConfig.asset.editor.toolbar.slots.left.name,\n      {\n        name: 'customToolbarButton',\n        component: CustomToolbarButton,\n        priority: 500\n      }\n    )\n  }\n}\n","import { Card, Content, Flex, Header, Icon, IconButton, IconTextButton, Space } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\n\nexport const CustomIcons = (): React.JSX.Element => {\n  return (\n    <Content padded>\n      <Header title=\"Custom Icons\" />\n      <Card>\n        <Flex\n          align='center'\n          gap='small'\n        >\n          <h1>Icon Example</h1>\n          <Icon\n            options={ { height: 35, width: 35, style: { rotate: '90deg' } } }\n            value=\"rocket-example\"\n          />\n        </Flex>\n      </Card>\n\n      <Space\n        direction='vertical'\n        size='small'\n      >\n        <IconButton\n          icon={ { value: 'rocket-example' } }\n          size='large'\n          type='default'\n        />\n\n        <IconTextButton icon={ { value: 'rocket-example' } }>\n          Rocket\n        </IconTextButton>\n\n        <IconTextButton\n          icon={ { value: 'rocket-example' } }\n          type='primary'\n        >\n          Rocket\n        </IconTextButton>\n      </Space>\n    </Content>\n  )\n}\n","import React from 'react'\n\nexport interface RocketProps extends React.SVGProps<SVGSVGElement> { }\n\nexport const Rocket = (props: RocketProps): React.JSX.Element => {\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      { ...props }\n    >\n      {/* <!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--> */}\n      <path\n        d=\"M156.6 384.9L125.7 354c-8.5-8.5-11.5-20.8-7.7-32.2c3-8.9 7-20.5 11.8-33.8L24 288c-8.6 0-16.6-4.6-20.9-12.1s-4.2-16.7 .2-24.1l52.5-88.5c13-21.9 36.5-35.3 61.9-35.3l82.3 0c2.4-4 4.8-7.7 7.2-11.3C289.1-4.1 411.1-8.1 483.9 5.3c11.6 2.1 20.6 11.2 22.8 22.8c13.4 72.9 9.3 194.8-111.4 276.7c-3.5 2.4-7.3 4.8-11.3 7.2l0 82.3c0 25.4-13.4 49-35.3 61.9l-88.5 52.5c-7.4 4.4-16.6 4.5-24.1 .2s-12.1-12.2-12.1-20.9l0-107.2c-14.1 4.9-26.4 8.9-35.7 11.9c-11.2 3.6-23.4 .5-31.8-7.8zM384 168a40 40 0 1 0 0-80 40 40 0 1 0 0 80z\"\n        fill='currentColor'\n      />\n    </svg>\n  )\n}\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { CustomIconExtension } from './modules/custom-icon-extension'\n\nexport const CustomIconPlugin: IAbstractPlugin = {\n  name: 'CustomIconPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(CustomIconExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type MainNavRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport { type IconLibrary } from '@pimcore/studio-ui-bundle/modules/icon-library'\nimport { type WidgetRegistry } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport { CustomIcons } from '../components/custom-icons'\nimport { Rocket } from '../icons/rocket'\n\nexport const CustomIconExtension: AbstractModule = {\n  onInit (): void {\n    const iconLibrary = container.get<IconLibrary>(serviceIds.iconLibrary)\n    iconLibrary.register({\n      name: 'rocket-example',\n      component: Rocket\n    })\n\n    const mainNavRegistryService = container.get<MainNavRegistry>(serviceIds.mainNavRegistry)\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin/Custom Icons',\n      widgetConfig: {\n        name: 'Custom Icons',\n        id: 'custom-icon',\n        component: 'custom-icons',\n        config: {\n          icon: {\n            type: 'name',\n            value: 'rocket-example'\n          }\n        }\n      }\n    })\n\n    const widgetRegistryService = container.get<WidgetRegistry>(serviceIds.widgetManager)\n    widgetRegistryService.registerWidget({\n      name: 'custom-icons',\n      component: CustomIcons\n    })\n  }\n}\n","import { Content, Header } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\n\nexport const AnotherExampleWidget = (): React.JSX.Element => {\n  return (\n    <Content padded>\n      <Header title='Another example widget' />\n\n      <div>\n        This is another example widget.\n      </div>\n    </Content>\n  )\n}\n","import { Button, Content, Header, Select, Space, type SelectProps } from '@pimcore/studio-ui-bundle/components'\nimport { useWidgetManager, type WidgetManagerTabConfig } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport React from 'react'\n\nexport const ExampleWidget = (): React.JSX.Element => {\n  const widgetManager = useWidgetManager()\n  const [selectedOption, setSelectedOption] = React.useState<SelectProps['value']>(undefined)\n  const [selectedWidget, setSelectedWidget] = React.useState<WidgetManagerTabConfig | undefined>(undefined)\n  const areButtonsDisabled = selectedWidget === undefined\n\n  const widgets: WidgetManagerTabConfig[] = [\n    {\n      name: 'Example widget',\n      component: 'example-widget',\n      config: {\n        icon: {\n          type: 'name',\n          value: 'pimcore'\n        }\n      }\n    },\n\n    {\n      name: 'Example widget with fixed id',\n      id: 'example-widget-fixed-id',\n      component: 'example-widget',\n      config: {\n        icon: {\n          type: 'name',\n          value: 'pimcore'\n        }\n      }\n    },\n\n    {\n      name: 'Another example widget',\n      component: 'another-example-widget',\n      config: {\n        icon: {\n          type: 'name',\n          value: 'pimcore'\n        }\n      }\n    }\n  ]\n\n  const onSelectChange: SelectProps['onChange'] = (value) => {\n    setSelectedOption(value)\n    const selected = widgets.find((widget) => widget.name === value)\n    setSelectedWidget(selected)\n  }\n\n  const selectOptions: SelectProps['options'] = widgets.map((widget) => ({\n    label: widget.name,\n    value: widget.name\n  }))\n\n  return (\n    <Content padded>\n      <Header title='Example widget' />\n\n      <div>\n        Select a widget:\n      </div>\n\n      <Select\n        minWidth={ 'normal' }\n        onChange={ onSelectChange }\n        options={ selectOptions }\n        value={ selectedOption }\n      />\n\n      { selectedWidget !== undefined && (\n        <Space\n          direction='vertical'\n          size='small'\n        >\n          <Button\n            disabled={ areButtonsDisabled }\n            onClick={ () => { widgetManager.openMainWidget(selectedWidget) } }\n          >\n            Open main widget\n          </Button>\n\n          <Button\n            disabled={ areButtonsDisabled }\n            onClick={ () => { widgetManager.openLeftWidget(selectedWidget) } }\n          >\n            Open left widget\n          </Button>\n\n          <Button\n            disabled={ areButtonsDisabled }\n            onClick={ () => { widgetManager.openRightWidget(selectedWidget) } }\n          >\n            Open right widget\n          </Button>\n\n          <Button\n            disabled={ areButtonsDisabled }\n            onClick={ () => { widgetManager.openBottomWidget(selectedWidget) } }\n          >\n            Open bottom widget\n          </Button>\n        </Space>\n      )}\n    </Content>\n  )\n}\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { CustomWidgetsExtension } from './modules/custom-widgets-extension'\n\nexport const CustomWidgetsPlugin: IAbstractPlugin = {\n  name: 'CustomWidgetsPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(CustomWidgetsExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type MainNavRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport { type WidgetRegistry } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport { ExampleWidget } from '../components/example-widget'\nimport { AnotherExampleWidget } from '../components/another-example-widget'\n\nexport const CustomWidgetsExtension: AbstractModule = {\n  onInit: (): void => {\n    const mainNavRegistryService = container.get<MainNavRegistry>(serviceIds.mainNavRegistry)\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin/Custom Widgets',\n      widgetConfig: {\n        name: 'Custom Widgets',\n        id: 'custom-widgets',\n        component: 'example-widget',\n        config: {\n          icon: {\n            type: 'name',\n            value: 'pimcore'\n          }\n        }\n      }\n    })\n\n    const widgetRegistryService = container.get<WidgetRegistry>(serviceIds.widgetManager)\n    widgetRegistryService.registerWidget({\n      name: 'example-widget',\n      component: ExampleWidget\n    })\n\n    widgetRegistryService.registerWidget({\n      name: 'another-example-widget',\n      component: AnotherExampleWidget\n    })\n  }\n}\n","import { Grid } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\n\ntype GridProps = Parameters<typeof Grid>\nconst columns: GridProps[0]['columns'] = [\n  {\n    id: 'number-cell',\n    accessorFn: (row) => row['number-cell'],\n    accessorKey: 'number-cell',\n    header: 'Number',\n    meta: {\n      type: 'number'\n    }\n  },\n\n  {\n    id: 'text-cell',\n    accessorFn: (row) => row['text-cell'],\n    accessorKey: 'text-cell',\n    header: 'Text',\n    meta: {\n      type: 'text'\n    }\n  },\n\n  {\n    id: 'boolean-cell',\n    accessorFn: (row) => row['boolean-cell'],\n    accessorKey: 'boolean-cell',\n    header: 'Boolean',\n    meta: {\n      type: 'boolean',\n      editable: false\n    }\n  },\n\n  {\n    id: 'live-updating',\n    accessorFn: (row) => row['live-updating'],\n    accessorKey: 'live-updating',\n    header: 'Live Updating',\n    meta: {\n      type: 'live-updating'\n    }\n  }\n]\n\nconst data: GridProps[0]['data'] = [\n  {\n    'number-cell': 1,\n    'text-cell': 'Hello',\n    'live-updating': '2234',\n    'boolean-cell': true\n  },\n  {\n    'number-cell': 2,\n    'text-cell': 'World',\n    'live-updating': '543',\n    'boolean-cell': false\n  },\n  {\n    'number-cell': 3,\n    'text-cell': '!',\n    'live-updating': '234',\n    'boolean-cell': true\n  }\n]\n\nexport const DataGrid = (): React.JSX.Element => {\n  return (\n    <Grid\n      columns={ columns }\n      data={ data }\n    />\n  )\n}\n","import { Content, Header } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\nimport { DataGrid } from './data-grid'\n\nexport const DynamicTypesWidget = (): React.JSX.Element => {\n  return (\n    <Content padded>\n      <Header title=\"Dynamic types\" />\n\n      <DataGrid />\n    </Content>\n  )\n}\n","import { type AbstractGridCellDefinition } from '@pimcore/studio-ui-bundle/modules/element'\nimport React, { useEffect, useState } from 'react'\n\nexport interface LiveUpdatingCellComponentProps extends AbstractGridCellDefinition {}\n\nexport const LiveUpdatingCellComponent = ({ getValue }: LiveUpdatingCellComponentProps): React.JSX.Element => {\n  const [currentValue, setCurrentValue] = useState(0)\n\n  useEffect(() => {\n    // Simulate a live updating value\n    // In a real-world scenario, this could be a Server Side Event or an API call\n    // The cell value could be used as a configuration for the API call\n    // or the SSE connection\n    const timer = setInterval(() => {\n      const newValue = Math.floor(Math.random() * 1000)\n      setCurrentValue(newValue)\n    }, 2000)\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return (\n    <div className='default-cell__content'>\n      {currentValue}\n    </div>\n  )\n}\n","import { type AbstractGridCellDefinition, DynamicTypeGridCellAbstract } from '@pimcore/studio-ui-bundle/modules/element'\nimport React, { type ReactElement } from 'react'\nimport { LiveUpdatingCellComponent } from '../components/live-updating-cell-component'\nimport { injectable } from '@pimcore/studio-ui-bundle/app'\n\n@injectable()\nexport class LiveUpdatingCell extends DynamicTypeGridCellAbstract {\n  id: string = 'live-updating'\n\n  getGridCellComponent (props: AbstractGridCellDefinition): ReactElement<AbstractGridCellDefinition> {\n    return <LiveUpdatingCellComponent { ...props } />\n  }\n}\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { DynamicTypeExtension } from './modules/dynamic-types-extension'\nimport { LiveUpdatingCell } from './dynamic-types/definitions/live-updating-cell'\n\nexport const DynamicTypePlugin: IAbstractPlugin = {\n  name: 'DynamicTypePlugin',\n\n  onInit ({ container }) {\n    container.bind('DynamicTypes/GridCell/LiveUpdatingCell').to(LiveUpdatingCell)\n  },\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(DynamicTypeExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type MainNavRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport { type WidgetRegistry } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport { DynamicTypesWidget } from '../components/dynamic-types-widget'\nimport { type DynamicTypeGridCellRegistry } from '@pimcore/studio-ui-bundle/modules/element'\n\nexport const DynamicTypeExtension: AbstractModule = {\n  onInit: (): void => {\n    const mainNavRegistryService = container.get<MainNavRegistry>(serviceIds.mainNavRegistry)\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin/Dynamic Types',\n      widgetConfig: {\n        name: 'Dynamic Types',\n        id: 'dynamic-types',\n        component: 'dynamic-types',\n        config: {\n          icon: {\n            type: 'name',\n            value: 'pimcore'\n          }\n        }\n      }\n    })\n\n    const widgetRegistryService = container.get<WidgetRegistry>(serviceIds.widgetManager)\n    widgetRegistryService.registerWidget({\n      name: 'dynamic-types',\n      component: DynamicTypesWidget\n    })\n\n    const gridCellRegistry = container.get<DynamicTypeGridCellRegistry>(serviceIds['DynamicTypes/GridCellRegistry'])\n\n    gridCellRegistry.registerDynamicType(container.get('DynamicTypes/GridCell/LiveUpdatingCell'))\n  }\n}\n","import React from 'react'\nimport { Alert, Content, Header } from '@pimcore/studio-ui-bundle/components'\n\nconst ExampleTool: React.FC = () => {\n  return (\n    <Content padded>\n      <Header title='Example Tool' />\n      <Alert message=\"Just a quick demo how to open main widgets from the main navigation menu.\" />\n    </Content>\n  )\n}\n\nexport default ExampleTool\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { MainNavEntryExtension } from './modules/main-nav-entry-extension'\n\nexport const MainNavEntryPlugin: IAbstractPlugin = {\n  name: 'MainNavEntryPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(MainNavEntryExtension)\n  }\n}\n","import { container, type AbstractModule } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type MainNavRegistry } from '@pimcore/studio-ui-bundle/modules/app'\nimport { type WidgetRegistry } from '@pimcore/studio-ui-bundle/modules/widget-manager'\nimport ExampleTool from '../components/example-tool'\n\nexport const MainNavEntryExtension: AbstractModule = {\n  onInit: (): void => {\n    const mainNavRegistryService = container.get<MainNavRegistry>(serviceIds.mainNavRegistry)\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin',\n      icon: 'pimcore'\n    })\n\n    mainNavRegistryService.registerMainNavItem({\n      path: 'Example Plugin/Example Tool',\n      widgetConfig: {\n        name: 'Example Tool',\n        id: 'example-tool',\n        component: 'example-tool',\n        config: {\n          icon: {\n            type: 'name',\n            value: 'pimcore'\n          }\n        }\n      }\n    })\n\n    const widgetRegistryService = container.get<WidgetRegistry>(serviceIds.widgetManager)\n    widgetRegistryService.registerWidget({\n      name: 'example-tool',\n      component: ExampleTool\n    })\n  }\n}\n","import { Content, Header } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\n\nexport const ExampleTab = (): React.JSX.Element => {\n  return (\n    <Content padded>\n      <Header title=\"Example Tab\" />\n      This is an example tab.\n    </Content>\n  )\n}\n","import { Alert, Content, Header } from '@pimcore/studio-ui-bundle/components'\nimport React from 'react'\n\nexport const PreviewTab = (): React.JSX.Element => {\n  return (\n    <Content padded>\n      <Header title=\"New preview tab\" />\n      <Alert\n        message={ (\n          <div>\n            This is a new preview tab.<br />\n            It replaces the default preview tab.\n          </div>\n      ) }\n        type=\"info\"\n      />\n    </Content>\n  )\n}\n","import { type IAbstractPlugin } from '@pimcore/studio-ui-bundle'\nimport { AssetFolderTabExtension } from './modules/asset-folder-tab-exentsion'\nimport { ObjectPreviewExtension } from './modules/object-preview-tab-extension'\n\nexport const TabManagerPlugin: IAbstractPlugin = {\n  name: 'TabManagerPlugin',\n\n  onStartup ({ moduleSystem }) {\n    moduleSystem.registerModule(AssetFolderTabExtension)\n    moduleSystem.registerModule(ObjectPreviewExtension)\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { Icon } from '@pimcore/studio-ui-bundle/components'\nimport { type FolderTabManager } from '@pimcore/studio-ui-bundle/modules/asset'\nimport { ExampleTab } from '../components/example-tab'\nimport React from 'react'\n\nexport const AssetFolderTabExtension: AbstractModule = {\n  onInit (): void {\n    const folderTabManager = container.get<FolderTabManager>(serviceIds['Asset/Editor/FolderTabManager'])\n\n    folderTabManager.register({\n      key: 'example-folder-tab',\n      label: 'Example Folder Tab',\n      icon: <Icon value=\"pimcore\" />,\n      children: <ExampleTab />\n    })\n  }\n}\n","import { type AbstractModule, container } from '@pimcore/studio-ui-bundle'\nimport { serviceIds } from '@pimcore/studio-ui-bundle/app'\nimport { type ObjectTabManager } from '@pimcore/studio-ui-bundle/modules/data-object'\nimport React from 'react'\nimport { PreviewTab } from '../components/preview-tab'\n\nexport const ObjectPreviewExtension: AbstractModule = {\n  onInit (): void {\n    const objectTabManager = container.get<ObjectTabManager>(serviceIds['DataObject/Editor/ObjectTabManager'])\n    const previewTab = objectTabManager.getTab('preview')\n\n    if (previewTab === undefined) {\n      throw new Error('Preview tab not found')\n    }\n\n    objectTabManager.register({\n      ...previewTab,\n      children: <PreviewTab />\n    })\n  }\n}\n","import { MainNavEntryPlugin } from './examples/main-nav-entry'\n// import { LeftSidebarPlugin } from './examples/left-sidebar'\nimport { AssetEditorToolbarButtonPlugin } from './examples/asset-editor-toolbar-button'\nimport { TabManagerPlugin } from './examples/tab-manager'\nimport { CustomIconPlugin } from './examples/custom-icons'\nimport { CustomWidgetsPlugin } from './examples/custom-widgets'\nimport { DynamicTypePlugin } from './examples/dynamic-types'\nimport { ApiDataPlugin } from './examples/api-data'\n\n// Examples are splitted into separate plugins to create a clear separation for better understanding.\n// You can also combine them into one plugin if you want to.\nexport {\n  MainNavEntryPlugin,\n  // LeftSidebarPlugin,\n  AssetEditorToolbarButtonPlugin,\n  TabManagerPlugin,\n  CustomIconPlugin,\n  CustomWidgetsPlugin,\n  DynamicTypePlugin,\n  ApiDataPlugin\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;;AAEA;AAAA;;;;;;AAEA;AAEA;AADA;;;;;;;;;;;AAMA;AA1BA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;;;;;;;AAIA;AAnBA;;AACA;AAEA;;;AAHA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;AAIA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAIA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;AAIA;AAdA;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AAEA;AAAA;;;;;;;;;;;;AAKA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;;;;;;AAEA;AAAA;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAEA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAOA;AAxGA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;AAGA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AAEA;;;;;;;;;;;AAGA;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAIA;AAAA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AAvBA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAAA;;;;;;AACA;;AALA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAGA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AACA;AAAA;;;;;;;;;;;;AAGA;AAPA;AASA;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AAAA;;;;;;;AAIA;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AACA;;AACA;AAAA;;;;;;AACA;AACA;;AACA;AACA;;;;;AAAA;;;;;;;AAIA;;;;;;;;;;;;AAIA;AAfA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;AACA;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA"}